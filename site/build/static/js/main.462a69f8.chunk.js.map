{"version":3,"sources":["content/Title.js","content/Map.js","content/Ip.js","content/Attrib.js","content/Setup.js","Content.js","App.js","index.js"],"names":["Title","className","size","Map","apiip","useState","loading","setLoading","api","preset","fetch","then","data","json","status","type","color","height","width","onClick","Ip","setApiip","ip","setIp","value","onChange","x","target","localStorage","setItem","Attrib","href","Setup","numLeds","setNumLeds","airports","Array","Number","map","i","maxLength","id","str","toUpperCase","console","log","method","headers","body","JSON","stringify","Content","setup","setSetup","useEffect","getItem","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.462a69f8.chunk.js","sourcesContent":["import React from \"react\";\nimport { FaPlane } from \"react-icons/fa\";\n\nconst Title = () => {\n  return (\n    <div className=\"title\">\n      <div className=\"row title\">\n        <div className=\"col\">\n          <h2 className=\"header\">MetarMap</h2>\n          <div className=\"row\">\n            <FaPlane size={24} />\n            <h4 className=\"subheader\">The MetarMap controller</h4>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default Title;\n","import React, { useState } from \"react\";\nimport Loader from \"react-loader-spinner\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nfunction Map({ apiip }) {\n  const [loading, setLoading] = useState(false);\n  const api = (preset) => {\n    setLoading(true);\n    fetch(`http://${apiip}:3333/${preset}`)\n      .then((data) => data.json())\n      .then((data) => data.status === \"success\" && setLoading(false));\n  };\n\n  return (\n    <div className=\"map\">\n      <h2 className=\"header\">Map Controls</h2>\n      <hr />\n      {(loading && (\n        <div className=\"center\">\n          <Loader type=\"TailSpin\" color=\"#253031\" height={100} width={100} />\n        </div>\n      )) || (\n        <>\n          <button onClick={() => api(\"america\")}> America</button>\n          <button onClick={() => api(\"metars\")}> Metars</button>\n          <button onClick={() => api(\"red\")}> Red</button>\n          <button onClick={() => api(\"blue\")}> Blue</button>\n          <button onClick={() => api(\"green\")}> Green</button>\n          <button onClick={() => api(\"off\")}> Off</button>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default Map;\n","import React, { useState } from \"react\";\n\nfunction Ip({ setApiip, apiip }) {\n  const [ip, setIp] = useState(\"\");\n  const save = () => {\n    setApiip(ip);\n    setIp(\"\");\n    localStorage.setItem(\"ip_address_for_metar_map\", apiip);\n  };\n  return (\n    <div className=\"ip\">\n      <h2 className=\"info\">\n        This is the \"KEY_IP\" printed out when running the boot file. It is also\n        the IP address of this site.\n      </h2>\n      <br />\n      <h2 className=\"info\">Example: \"192.168.0.12\"</h2>\n      <div className=\"info\">\n        <input type=\"text\" value={ip} onChange={(x) => setIp(x.target.value)} />\n        <button onClick={() => save()}>Assign IP</button>\n        <h2 className=\"info special\">\n          This will be saved in cookies for the next time you access this site\n        </h2>\n      </div>\n    </div>\n  );\n}\n\nexport default Ip;\n","import React from \"react\";\n\nfunction Attrib() {\n  return (\n    <div className=\"attrib\">\n      <h2>Created by Nick Heyland</h2>\n      <h2>\n        For assistance please email me at\n        <a href=\"mailto:snheyland@gmail.com<\"> nheyland@gmail.com</a>\n      </h2>\n      <h2>\n        For source code and instructions click\n        <a href=\"https://github.com/nheyland/metarmap\"> here</a>\n      </h2>\n      <h2>This software is not intended for sale or redistribution</h2>\n      <h2>\n        Interested in the iOS App? Click\n        <a\n          href=\"https://apps.apple.com/us/app/mapremote/id1576002389\nhttps://apps.apple.com/us/app/mapremote/id1576002389\"\n        >\n          {\" \"}\n          here\n        </a>\n      </h2>\n    </div>\n  );\n}\n\nexport default Attrib;\n","import React, { useState, useEffect } from \"react\";\nimport { AiOutlineArrowDown } from \"react-icons/ai\";\n\nfunction Setup({ apiip, setApiip }) {\n  const [loading, setLoading] = useState(false);\n  const [numLeds, setNumLeds] = useState(2);\n  const [ip, setIp] = useState(\"\");\n  const save = () => {\n    setApiip(ip);\n    setIp(\"\");\n    localStorage.setItem(\"ip_address_for_metar_map\", apiip);\n  };\n\n  let airports = {};\n  const formatAirports = (id, str) => {\n    if (id in airports) {\n      airports[id] = str.toUpperCase();\n    } else {\n      airports[id] = str.toUpperCase();\n    }\n  };\n  const api = (preset) => {\n    setLoading(true);\n    fetch(`http://${apiip}:3333/${preset}`)\n      .then((data) => data.json())\n      .then((data) => data.status === \"success\" && setLoading(false));\n  };\n  const sendToDevice = () => {\n    console.log(airports);\n    fetch(`http://${apiip}:3333/setAirports`, {\n      \"Access-Control-Allow-Origin\": \"*\",\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(airports),\n    })\n      .then((data) => data.json())\n      .then((data) => data.status === \"success\" && setLoading(false));\n  };\n  return (\n    <div className=\"setup\">\n      <h2 className=\"setup-text\">\n        Welcome! Lets get this set up, if you are seeing this, you are connected\n        to the metarmap. Fill out these settings to setup the map.\n      </h2>\n      <div className=\"setup-row\">\n        <AiOutlineArrowDown size={36} className=\"ctr\" />\n      </div>\n      <h2 className=\"setup-text\">\n        Before we start, we need the ip. The ip for this is the ip of the device\n        that we are setting. The ip is the base url of this site, example:\n        192.168.0.33\n        <br />\n        <input type=\"text\" value={ip} onChange={(x) => setIp(x.target.value)} />\n        <button onClick={() => save()}>Assign IP</button>\n        <h2 className=\"info special\">\n          This will be saved in cookies for the next time you access this site\n        </h2>\n      </h2>\n      <div className=\"setup-row\">\n        <AiOutlineArrowDown size={36} className=\"ctr\" />\n      </div>\n      <h2 className=\"setup-text\">\n        First lets run a test, press this button to test all the lights. You\n        should see them turn all the color selected\n      </h2>\n      <div className=\"setup-row\">\n        <button className=\"ctr\" onClick={() => api(\"green\")}>\n          Test Green\n        </button>\n        <button className=\"ctr\" onClick={() => api(\"red\")}>\n          Test Red\n        </button>\n        <button className=\"ctr\" onClick={() => api(\"blue\")}>\n          Test Blue\n        </button>\n      </div>\n      <h2 className=\"setup-text\">\n        All the colors should shine through the map. Make adjustments to the\n        physical map now\n      </h2>\n      <div className=\"setup-row\">\n        <AiOutlineArrowDown size={36} className=\"ctr\" />\n      </div>\n      <h2 className=\"setup-text\">\n        Lets check the amount of LEDs you have, set a number below and we can\n        light up that many LEDs to confirm\n      </h2>\n      <div className=\"setup-row\">\n        <input\n          onChange={(x) => {\n            setNumLeds(x.target.value);\n          }}\n          type=\"number\"\n        />\n        <button onClick={() => api(`testAmount/${numLeds}`)}>\n          Power {numLeds} LEDs\n        </button>\n      </div>\n      <h2 className=\"info special\">\n        Once you enter the airports, DO NOT CHANGE THIS, otherwise your work\n        will disappear\n      </h2>\n      <h2 className=\"setup-text\">\n        Keep testing this setting to see how many Leds are lighting up, do this\n        until you know how many you have\n      </h2>\n      <div className=\"setup-row\">\n        <AiOutlineArrowDown size={36} className=\"ctr\" />\n      </div>\n      <h2 className=\"setup-text\">\n        Lets get the airports, heres how we can do it...\n      </h2>\n      <h2 className=\"setup-text\">\n        For each row below, type in the identifier of the airport in order. The\n        first light is the closest to the pi\n      </h2>\n      <div className=\"airports\"></div>\n      {[...Array(Number(numLeds))].map((x, i) => (\n        <div className=\"airports-row\">\n          <h2>{i + 1}</h2>\n          <input\n            maxLength=\"4\"\n            key={i}\n            id={i}\n            type=\"text\"\n            onChange={(x) => formatAirports(x.target.id, x.target.value)}\n          />\n        </div>\n      ))}\n      <h2 className=\"setup-text\">\n        Thats it! Hit the send to device button, and the information will be\n        saved on device! Now return to the home screen and hit \"metars\"!\n      </h2>\n      <button onClick={() => sendToDevice()}>Send to device!</button>\n    </div>\n  );\n}\n\nexport default Setup;\n","import React, { useEffect, useState } from \"react\";\nimport Map from \"./content/Map\";\nimport Ip from \"./content/Ip\";\nimport Attrib from \"./content/Attrib\";\nimport Setup from \"./content/Setup\";\n\nconst Content = () => {\n  const [apiip, setApiip] = useState(null);\n  const [setup, setSetup] = useState(false);\n  useEffect(() => {\n    if (localStorage.getItem(\"ip_address_for_metar_map\") !== null)\n      setApiip(localStorage.getItem(\"ip_address_for_metar_map\"));\n  }, []);\n  return (\n    <div className=\"content\">\n      <hr />\n\n      {(!setup && (\n        <>\n          {(apiip && <Map apiip={apiip} setApiip={setApiip} />) || (\n            <Ip apiip={apiip} setApiip={setApiip} />\n          )}\n          <button\n            onClick={() => {\n              setSetup(true);\n            }}\n          >\n            Setup\n          </button>\n          <button onClick={() => setApiip(null)}>Reset IP</button>\n        </>\n      )) || <Setup apiip={apiip} setApiip={setApiip} />}\n\n      <Attrib />\n    </div>\n  );\n};\n\nexport default Content;\n","import React from \"react\";\nimport Title from \"./content/Title\";\n\nimport \"./styles/general.css\";\n\nimport Content from \"./Content\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Title />\n      <Content />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}